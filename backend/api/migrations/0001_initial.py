# Generated by Django 4.2.8 on 2023-12-14 00:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=120)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('head_name', models.CharField(max_length=120)),
                ('head_contact', models.CharField(max_length=120)),
                ('description', models.TextField(max_length=2000)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('probability', models.FloatField(blank=True)),
                ('mail', models.EmailField(max_length=254)),
                ('age', models.PositiveIntegerField()),
                ('education_level', models.CharField(choices=[('0', 'Без образования'), ('1', 'Среднее общее'), ('2', 'Средне специальное'), ('3', 'Высшее')], default='0', max_length=1)),
                ('education_field', models.CharField(choices=[('gum', 'Гумманитарное'), ('tech', 'Техническое'), ('chem_bio', 'Химия, биология и производные'), ('nat', 'Естественные науки'), ('soc', 'Социальное, управленческое'), ('eco', 'Экономическое')], default='gum', max_length=8)),
                ('is_male', models.CharField(choices=[('1', 'Мужской'), ('0', 'Женский')], default='m', max_length=1)),
                ('is_married', models.CharField(choices=[('0', 'Не в браке'), ('1', 'В браке')], default='0', max_length=1)),
                ('is_child', models.CharField(choices=[('0', 'Нет'), ('1', 'Да')], default='0', max_length=1)),
                ('is_house', models.CharField(choices=[('0', 'Нет'), ('1', 'Да')], default='0', max_length=1)),
                ('salary', models.IntegerField()),
                ('role', models.CharField(max_length=30)),
                ('total_working_years', models.FloatField()),
                ('years_at_company', models.FloatField()),
                ('work_hours_week', models.IntegerField()),
                ('work_accident', models.CharField(choices=[('1', 'Да'), ('0', 'Нет')], default='0', max_length=1)),
                ('change_salary_period', models.IntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='api.department')),
            ],
        ),
    ]
